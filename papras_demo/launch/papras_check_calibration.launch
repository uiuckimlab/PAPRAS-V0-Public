<launch>
    <arg name="namespace_prefix" default="papras_handeyecalibration" />
    <arg name="usb_port" default="/dev/ttyUSB0" />
    <arg name="pipeline" default="ompl"/>
    <arg name="marker_size" default="0.03" />
    <arg name="marker_id" default="0" doc="The ID of the ArUco marker used" />
    <arg name="namespace" default="robot1"/>
    <arg name="sim" default="false"/>
    <arg name="eye_on_hand" default="true"/>
     <arg name="evaluation" default="true" doc="Start the evaluator to estimate the accuracy of the calibration" />
     

    <node name="aruco_tracker" pkg="aruco_ros" type="single">
        <remap from="/camera_info" to="/dope/webcam/camera_info" />
        <remap from="/image" to="/dope/webcam/image_raw" />
        <param name="image_is_rectified" value="true"/>
        <param name="marker_size"        value="$(arg marker_size)"/>
        <param name="marker_id"          value="$(arg marker_id)"/>
        <!-- <param name="reference_frame"    value="$(arg namespace)/camera_link"/> -->
        <param name="camera_frame" value="$(arg namespace)/camera_link"/>   
        <param name="marker_frame" value="camera_marker" />
    </node>
<!-- 
 <node name="tracking_simulator" pkg="easy_handeye_demo" type="tracking_simulator.py" output="screen">

        <param name="frequency" value="10" />
        <param name="translation_noise_stdev" value="0.001" />
        <param name="rotation_noise_stdev" value="0.0001" />

        <param name="eye_on_hand" value="true" />

        <param unless="$(arg eye_on_hand)" name="ground_truth_calibration_transformation" value="1 0 0.5 0 0 0 1" />
        <param unless="$(arg eye_on_hand)" name="arbitrary_marker_placement_transformation" value="0.12 0.21 0.137 0 0 0 1" />

        <param if="$(arg eye_on_hand)" name="ground_truth_calibration_transformation" value="0.12 0.21 0.137 0 0 0 1" />
        <param if="$(arg eye_on_hand)" name="arbitrary_marker_placement_transformation" value="1 0 0.5 0 0 0 1" />

        <param name="tracking_base_frame" value="$(arg namespace)/camera_link" />
        <param name="tracking_marker_frame" value="camera_marker" />
        <param name="robot_base_frame" value="$(arg namespace)/link1" />
        <param name="robot_effector_frame" value="$(arg namespace)/end_effector_link" />

        <param name="frequency" value="10" />
        <param name="translation_noise_stdev" value="0.0001" />
        <param name="rotation_noise_stdev" value="0.00001" />
    </node> -->




    <!-- publish the hand-eye calibration computed with easy_handeye -->
    <include file="$(find easy_handeye)/launch/publish.launch" >
        <arg name="eye_on_hand" value="$(arg eye_on_hand)" />
        <arg name="namespace_prefix" value="$(arg namespace_prefix)" />

        <arg name="tracking_base_frame" value="$(arg namespace)/camera_link" />
        <arg unless="$(arg eye_on_hand)" name="robot_base_frame" value="$(arg namespace)/link1"  />
        <arg if="$(arg eye_on_hand)" name="robot_effector_frame" value="$(arg namespace)/end_effector_link" />
    </include>

    <!-- evaluate the accuracy of the hand-eye calibration  -->
    <node if="$(arg evaluation)" ns="$(arg namespace_prefix)" name="calibration_evaluator" pkg="rqt_easy_handeye" type="rqt_calibration_evaluator" respawn="false" output="screen" >
        <param name="eye_on_hand" value="$(arg eye_on_hand)" />
        <param name="robot_base_frame" value="$(arg namespace)/link1" />
        <param name="robot_effector_frame" value="$(arg namespace)/gripper_body" />
        <param name="tracking_base_frame" value="$(arg namespace)/camera_link" />
        <param name="tracking_marker_frame" value="camera_marker" />
    </node>

</launch>