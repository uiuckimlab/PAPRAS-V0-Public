<launch>
  <!-- Launch rviz.launch before running this demo to see visalizations -->

  <!-- Debug -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />
  <arg name="namespace" default="robot1"/>
  <arg name="namespace_prefix" default="papras_handeyecalibration" />
  <arg name="eye_on_hand" default="true"/>
  <arg name="marker_size" default="0.03" />
  <arg name="marker_id" default="0" doc="The ID of the ArUco marker used" />

   <!-- start ArUco -->
    <!-- <node name="aruco_tracker" pkg="aruco_ros" type="single">
        <remap from="/camera_info" to="/dope/webcam/camera_info" />
        <remap from="/image" to="/dope/webcam/image_raw" />
        <param name="image_is_rectified" value="false"/>
        <param name="marker_size"        value="$(arg marker_size)"/>
        <param name="marker_id"          value="$(arg marker_id)"/>
        <param name="reference_frame"    value="$(arg namespace)/camera_link"/>
        <param name="camera_frame" value="$(arg namespace)/camera_link"/>   
        <param name="marker_frame" value="camera_marker" />
    </node> -->

    <node pkg="aruco_ros" type="marker_publisher" name="aruco_marker_publisher">
        <remap from="/camera_info" to="/dope/webcam/camera_info" />
        <remap from="/image" to="/dope/webcam/image_raw" />
        <param name="image_is_rectified" value="False"/>
        <param name="marker_size"        value="$(arg marker_size)"/>
        <!-- <param name="reference_frame"    value="$(arg ref_frame)"/>   -->
        <param name="camera_frame"       value="$(arg namespace)/camera_link"/>
    </node>


  <!-- Verbose mode -->
  <arg name="verbose" default="false" />
  <arg unless="$(arg verbose)" name="command_args" value="" />
  <arg     if="$(arg verbose)" name="command_args" value="--verbose" />

  <!-- Callgrind Arguments -->
  <arg name="callgrind" default="false" />
  <arg unless="$(arg callgrind)" name="launch_prefix2" value="" />
  <arg     if="$(arg callgrind)" name="launch_prefix2" value="valgrind --tool=callgrind --collect-atstart=no" />

  <!-- Valgrind Arguments -->
  <arg name="valgrind" default="false" />
  <arg unless="$(arg valgrind)" name="launch_prefix3" value="" />
  <arg     if="$(arg valgrind)" name="launch_prefix3" value="valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all --track-origins=yes -v" />

     <!-- publish the hand-eye calibration computed with easy_handeye -->
    <!-- <include file="$(find easy_handeye)/launch/publish.launch" >
        <arg name="eye_on_hand" value="$(arg eye_on_hand)" />
        <arg name="namespace_prefix" value="$(arg namespace_prefix)" />

        <arg name="tracking_base_frame" value="$(arg namespace)/camera_link" />
        <arg unless="$(arg eye_on_hand)" name="robot_base_frame" value="$(arg namespace)/link1"  />
        <arg if="$(arg eye_on_hand)" name="robot_effector_frame" value="$(arg namespace)/end_effector_link" />
    </include> -->
  
  <!-- Start the demo -->
  <node name="pick_place" launch-prefix="$(arg launch_prefix) $(arg launch_prefix2) $(arg launch_prefix3)" pkg="papras_demo"
  type="pick_place" output="screen" args="$(arg command_args)"/>

  <!-- <node name="plan_dope_grasps_service" launch-prefix="$(arg launch_prefix) $(arg launch_prefix2) $(arg launch_prefix3)" pkg="papras_demo" 
    type="plan_grasps_service"  output="screen" args="$(arg command_args)">
    <param name="ee_group_name" value="hand1"/>
    <param name="planning_group_name" value="arm1"/>
    <rosparam command="load" file="$(find moveit_grasps)/config_robot/papras_grasp_data.yaml"/>
    <rosparam command="load" file="$(find moveit_grasps)/config/moveit_grasps_config.yaml"/>
  </node> -->

</launch>
