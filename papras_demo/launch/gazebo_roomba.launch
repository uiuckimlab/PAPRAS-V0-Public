<?xml version="1.0" ?>
<launch>
  <arg name="sim" default="true"/>
  <arg name="usb_port" default="/dev/ttyUSB0" />
  <arg name="pipeline" default="ompl"/>
  <arg name="rviz" default="true"/>

  <!-- Gazebo args -->
  <arg name="paused" default="false"/>
  <arg name="gazebo_gui" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="demo_env" default="papras"/>
  <arg name="verbose" value="true" />

  <!-- Model spawn locations -->
  <arg name="model" default="roomba" doc="model type [kitchen, big_table, tea_table, spot, roomba]"/>
  <arg name="tea_table_pos_x" default="-1"/>
  <arg name="tea_table_pos_y" default=" -1"/>
  <arg name="kitchen_pos_x" default="-2"/>
  <arg name="kitchen_pos_y" default="0.0"/>
  <arg name="spot_mount_pos_x" default="-1"/>
  <arg name="spot_mount_pos_y" default="1"/>
  <arg name="spot_mount_pos_yaw" default="1.57"/>

  <!-- startup Gazebo related -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="gui" value="$(arg gazebo_gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <group ns="roomba">
      <!-- startup robot_description related -->
      <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find papras_description)/urdf/roomba_model/iRobot.urdf.xacro'"/>
      <param name="camera" command="$(find xacro)/xacro inorder '$(find papras_description)/urdf/camera.urdf.xacro'"/>
      <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
          <param name="publish_frequency" type="double" value="50.0" />
          <param name="tf_prefix" value="roomba" />
      </node>

      <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model seeker -x 0 -y 0 -z 0 -param robot_description" /> -->

      <node name="keyboard_control" pkg="papras_demo" type="keyboard_node" respawn="false" output="screen" />
      <!-- <arg name="device" default="/dev/input/js0"/>

      <node name="joy" pkg="irobotcreate2" type="joy_node" respawn="false" output="screen"/>

      <node name="joy_driver" pkg="joy" type="joy_node" respawn="false" output="screen">
  	     <param name="dev" value="$(arg device)"/>
      </node> -->


      <!-- startup ROS control related -->
      <!-- <include file="$(find papras_controllers)/launch/controller_utils.launch"/>
      <rosparam file="$(find papras_controllers)/config/joint_trajectory_controller_gazebo.yaml" command="load"/>
      <node name="arm1_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn arm1_controller"/>
      <node name="arm2_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn arm2_controller"/>
      <node name="gripper1_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn gripper1_controller"/>
      <node name="gripper2_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn gripper2_controller"/> -->

      <!-- startup move_group related -->
      <!-- <include file="$(find tea_table_moveit_config)/launch/move_group.launch">
        <arg name="pipeline" value="$(arg pipeline)"/>
        <arg name="load_robot_description" value="true" />
      </include> -->
  </group>

  <node pkg="tf" type="static_transform_publisher" name="world2tea_table" args="0 0 0 0 0 0 /world /tea_table/world 100"/>
  <node pkg="tf" type="static_transform_publisher" name="world2kitchen" args="0 0 0 0 0 0 /world /kitchen/world 100"/>
  <node pkg="tf" type="static_transform_publisher" name="world2spot_mount" args="0 0 0 0 0 0 /world /spot_mount/world 100"/>

  <!-- startup rviz visulization -->
  <!-- <group if="$(arg rviz)">
    <include file="$(find tea_table_moveit_config)/launch/moveit_rviz.launch">
      <arg name="rviz_config" value="$(find papras_utils)/rviz/homecare.rviz"/>
    </include>
  </group> -->
</launch>
